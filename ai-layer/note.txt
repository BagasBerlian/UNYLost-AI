mkdir ai-layer && cd ai-layer
python -m venv venv
source venv/Scripts/activate
pip install fastapi uvicorn torch torchvision scikit-learn numpy pillow firebase-admin requests
pip install --upgrade google-api-python-client google-auth-httplib2 google-auth-oauthlib
Buat app/main.py
Buat Endpoint Dasar: app/routers/image_matcher.py
python generate_embeddings.py

# pylint: disable=all
# type: ignore
# noqa

Menyiapkan firebase:
1. Kunjungi: https://console.firebase.google.com
2. Klik “Add Project” / “Buat Proyek”
3. Beri nama proyek (misalnya: UNYLost-AI)
4. Pilih “Enable Google Analytics” → boleh dinonaktifkan
5. Selesai → Firebase akan membuatkan project-mu.

Aktifkan Firestore -> menyimpan metadata / embedding :
1. Masuk ke Firebase Console
2. Pilih proyekmu → klik menu “Build > Firestore Database”
3. Klik “Create database”
4. Pilih Start in test mode (untuk pengembangan), klik Next
5. Pilih lokasi (misal asia-southeast1), lalu Enable

Buat Service Account Key -> Service Account ini digunakan agar backend Python bisa akses Firebase (Firestore) :
1. Project settings
2. Service Account
3. generate new private Key
4. ubah nama file "serviceAccountKey.json", download
5. letakkan file di firebase-key/serviceAccountKey.json

Manage Google Drive API : https://console.cloud.google.com/apis/library/drive.googleapis.com?project=unylost-ai

# Membersihkan seluruh data pada firebase
python setup_firebase.py --clean

# Setup Firebase dan data awal
python setup_firebase.py --with-samples

# Inisialisasi model-model ML
python init_models.py

# Jalankan aplikasi (mode development)
python run.py || uvicorn app.main:app --reload

# Atau jalankan aplikasi (mode production)
python run.py --prod --host 0.0.0.0 --port 8080

services/hybrid_matcher.py :
    image: Gambar untuk pencocokan (opsional)
    text: Teks deskripsi untuk pencocokan (opsional)
    image_threshold: Threshold minimum untuk kecocokan gambar (0-1)
    text_threshold: Threshold minimum untuk kecocokan teks (0-1)
    image_weight: Bobot untuk skor kecocokan gambar
    text_weight: Bobot untuk skor kecocokan teks
    max_results: Jumlah maksimum hasil yang dikembalikan

services/feedback_learner.py :
    match_id: ID dari kecocokan
    is_correct: Apakah kecocokan benar (True) atau salah (False)
    user_id: ID pengguna yang memberikan feedback (opsional)
    match_type: Jenis kecocokan (hybrid, image, atau text)
    match_score: Skor kecocokan (antara 0 dan 1)
    item_category: Kategori barang yang dicocokkan